[tool.poetry]
name = "var_engine"
version = "0.1.0"
description = "Simple VaR model"
authors = ["Charles-Auguste <charles-auguste.gourio@enpc.fr>"]
readme = "README.md"
packages = [
    { include = "var_engine" },
]

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.2.3"
openpyxl = "^3.1.5"
termcolor = "^2.5.0"
networkx = {extras = ["default"], version = "^3.4.2"}
mermaid-py = "^0.7.0"
pandas-market-calendars = "^4.5.1"
plotly = "^5.24.1"
setuptools = "^75.8.0"
nbformat = "^5.10.4"
click = "^8.1.8"

[tool.poetry.group.test.dependencies]
coverage = "^7.6.4"
pytest = "^8.3.3"

[tool.poetry.group.dev.dependencies]
ipython = "^8.29.0"
pre-commit = "^4.0.1"
ipdb = "^0.13.13"
isort = "^5.13.2"
black = {extras = ["jupyter"], version = "^24.10.0"}
ruff = "^0.9.2"
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# CLI
[tool.poetry.scripts]
var_engine = "var_engine.cli:cli"

# Pre-commit
[tool.black]
line-length = 88
skip-string-normalization = 1

[tool.isort]
line_length = 88
known_first_party = "var_engine"
multi_line_output = 3
profile = "black"

# Pytest and Coverage
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-s -v --durations=0"
cache_dir = ".cache/pytest_cache"

[tool.coverage.run]
branch = true
source = ["var_engine"]
command_line = "-m pytest"

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "pkg_coverage.xml"
